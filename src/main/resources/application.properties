# Trick to let IntelliJ view endpoints through actuator.
management.endpoints.jmx.exposure.include=*

server.port=8000


spring.datasource.url=jdbc:postgresql://localhost:5433/ecommerce
spring.datasource.username=postgres
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=update


# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Encryption configuration
encryption.salt.rounds=10

# JWT configuration
jwt.algorithm.key=SuperSecureSecretKey
jwt.issuer=eCommerce
jwt.expiryInSeconds=604800

# Email configuration
email.from=no-reply@ecommerce.com

# General configuration
app.frontend.url=http://example.com

# SMTP configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=525
spring.mail.username=
spring.mail.password=
spring.properties.mail.smtp.auth=true
spring.properties.mail.smtp.starttls.enable=true